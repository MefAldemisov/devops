version: '3.7'

networks:
  logs:

x-defaults:
  &config
  mem_limit: 512m
  logging:
    driver: "json-file"
    options:
      max-size: "64m"
      max-file: "4"
      tag: "{{.ImageName}}|{{.Name}}|{{.ContainerName}}"
  restart: unless-stopped
  networks:
    - logs
    
services:

  prometheus:
    image: prom/prometheus:v2.18.1
    container_name: monitoring.prometheus
    volumes:
      - ${PWD}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${PWD}/prometheus/prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=14d'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.wal-compression'
      - '--storage.tsdb.max-block-duration=4h'
      - '--storage.tsdb.wal-segment-size=60MB'
      - '--storage.tsdb.allow-overlapping-blocks'
      - '--query.max-samples=5000000'
    expose:
      - 9090
    ports:
      - "9090:9090"
    <<: *config

  grafana:
    image: grafana/grafana:8.1.3
    container_name: monitoring.grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - VIRTUAL_HOST=monitoring.grafana
      - NETWORK_ACCESS=internal
      - VIRTUAL_PORT=3000
    expose:
      - 3000
    ports:
      - "3000:3000"
    <<: *config

  loki:
    container_name: monitoring.loki
    image: grafana/loki:2.3.0
    expose:
      - 3100
    ports:
      - "3100:3100"
    volumes:
      - ${PWD}/loki/loki-config.yml:${PATH_TO_LOKI}/loki-config.yml
      - ${PWD}/loki/loki-data:/tmp/loki
    command: -config.file=${PATH_TO_LOKI}/loki-config.yml
    <<: *config

  promtail:
      image: grafana/promtail:2.3.0
      container_name: monitoring-promtail
      expose:
        - 9080
      ports:
        - "9080:9080"
      volumes:
        - /var/lib/docker/containers:/var/lib/docker/containers
        - ${PWD}/promtail/promtail.yml:${PATH_TO_PRMPT}/promtail.yml
        - ${PWD}/promtail/promtail-data:/var/lib/promtail/positions
      command: -config.file=${PATH_TO_PRMPT}/promtail.yml
      <<: *config

  app:
    image: "mefaldemisov/devops_course:latest"
    container_name: devops_course
    ports:
      - "5000:5000"
    <<: *config
